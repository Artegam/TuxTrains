<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>500</y>
      <w>490</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>Render::Objet3D
--
#nom: char*
#mat: Material
#vertices: vector&lt;Vertex&gt;
#verticesNormal: vector&lt;VertexNormal&gt;
#faces: vector&lt;Face&gt;
#listeAffichage: GLuint
--
+init():void
+getNom() :chr*
+setNom(nom :char *):void
+getNomMateriau():string
+setMateriau(Material pNomMateriau):void
+ajouterVertex(double pX, double pY, double pZ, double pW):void
+ajouterVertexNormal(double pX, double pY, double pZ, double pW):void
+ajouterFace(const int nbParametres, char** parametres):void
+afficherVertex(Vertex&amp; v):void
+dessiner():void
/+animer():void/
/-postAnimation():void/
/-preAnimation():void/
/-animer(sens: bool)/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>670</x>
      <y>0</y>
      <w>210</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>Parser::MatParser
--
#vMat : Material*
#fichierRAM: vector&lt;string&gt;
#materiaux: map&lt;string, Material&gt;
--
+parserFichier(void): void
+getTokens(vector&lt;string&gt;::iterator it): vector&lt;string&gt;
+readFile (const char * filename): map&lt;string, Material&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>610</x>
      <y>220</y>
      <w>370</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>Parser::ObjParser
--
#materiaux: map&lt;string, Material&gt;
#objets: vector&lt;Objet3D&gt;
#vObj: Objet3D*
--
+ObjParser(map&lt;string, Material&gt; mats)
+readFile (const char * filename): vector&lt;Objet3D&gt;
+parserFichier(void): void
+getTokens(vector&lt;string&gt;::iterator it): vector&lt;string&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1800</x>
      <y>60</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>_Main_</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>870</x>
      <y>60</y>
      <w>360</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
readFile("chemin/monFichier.mtl")</panel_attributes>
    <additional_attributes>10.0;20.0;340.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>970</x>
      <y>110</y>
      <w>260</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
new(listeMateriaux)
readFile(chemin/monFichier.obj)</panel_attributes>
    <additional_attributes>10.0;190.0;240.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1210</x>
      <y>40</y>
      <w>370</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>Parser::Loader
--
#listeMateriaux: map&lt;string, Material&gt;
--
Loader(char* cheminObj, bool recursif)
Loader(char* cheminObj, char* cheminMtl, bool recursif)
Loader(vector&lt;string&gt; listeObj, vector&lt;string&gt; listeMtl)
#vector&lt;string&gt; getFilenamesFromDir(const char* directory)
+getObjets(): vector&lt;Objet3D&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>830</x>
      <y>360</y>
      <w>30</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1360</x>
      <y>360</y>
      <w>210</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Moteur
--
#listeObjets:Objets3D
--
+Moteur(const char* objPath);
+tic():void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1500</x>
      <y>80</y>
      <w>350</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
new()
tic()</panel_attributes>
    <additional_attributes>10.0;280.0;330.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1000</x>
      <y>370</y>
      <w>380</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>360.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1080</x>
      <y>400</y>
      <w>300</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
dessiner()</panel_attributes>
    <additional_attributes>10.0;120.0;280.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1430</x>
      <y>150</y>
      <w>110</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
new()
getObjets()</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;210.0</additional_attributes>
  </element>
  <element>
    <type>com.baselet.element.old.element.Class</type>
    <coordinates>
      <x>70</x>
      <y>360</y>
      <w>380</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>Render::Face
--
mat: Material
vertexNums: vector&lt;long&gt;
vertexTextNums: vector&lt;long&gt;
vertexNormalNums: vector&lt;long&gt;
--
Face(Material m);
ajouterNumVertex(long numVertex): void
ajouterNumVertexTexture(long numVertexTexture): void
ajouterNumVertexNormal(long numVertexNormal): void
dessiner(vector&lt;Vertex&gt; pVertices, vector&lt;VertexNormal&gt; pVerticesNormal): void
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
